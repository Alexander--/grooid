buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.1'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'groovyx.grooid.groovy-android'

repositories {
    jcenter()
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        applicationId 'net.sf.fakenames.app'
        minSdkVersion 19
        targetSdkVersion 22
        versionCode 1
        versionName '1.0'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

def aptOutput = "$projectDir/build/generated/source/apt/" as File

androidGroovy {
    options {
        sourceCompatibility = '1.7'
        targetCompatibility = '1.7'

        groovyOptions.configurationScript = file 'src/main/compiler/compiler-config.groovy'
        groovyOptions.javaAnnotationProcessing = true

        options.compilerArgs = [ '-s', aptOutput, '-processorpath', "${configurations.apt.asPath}" ]
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.google.android.tools:dx:1.7'
    compile 'org.codehaus.groovy:groovy:2.4.3:grooid'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.hanhuy.android:viewserver:1.0.2'

    compile project(':goro')
    compile project(':db')
    compile project(':dispatcher')

    //compile files('libs/enroscar-goro-2.0.1-SNAPSHOT.jar')

    //compile 'com.stanfy.enroscar:enroscar-async:1.0.0@jar'
    //provided 'com.stanfy.enroscar:enroscar-async-compiler:1.0.0'
}

project.android.applicationVariants.all { variant ->
    variant.addJavaSourceFoldersToModel(aptOutput)

    def javaCompile = variant.hasProperty('javaCompiler') ? variant.javaCompiler : variant.javaCompile

    javaCompile.doFirst {
        aptOutput.mkdirs()
    }
}